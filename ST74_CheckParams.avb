Option Explicit

'#include "ST74_XML.avb"
'#include "ST74_ADO.avb"

Const ST74_PARAM_FILE_NAME = "ST74_Params.xml"
Const MSG_BOX_CAPTION = "Проверка целостности решения"

'---
'
'---
Sub ST74_CheckParams
	Dim oXml

	Set oXml = New XML

	If oXML.Create() Then	
		oXml.FileName = ST74_PARAM_FILE_NAME

		If oXml.Load() Then
			If Not CheckParams(oXml.xml.documentElement.selectNodes("/config").item(0)) Then
				MsgBox "В процессе проверки выявлены ошибки" & vbNewLine & _
							"Программа может работать не корректно" & vbNewLine & _
							"Обратитесь в службу поддержки.", vbExclamation, MSG_BOX_CAPTION
			End If
		End If
	End If

	If oXml.ErrorMsg <> "" Then
		MsgBox oXml.ErrorMsg, vbCritical, MSG_BOX_CAPTION
	End If
End Sub
'---
'
'---
Function CheckParams(xmlRoot)
	Dim i, IsError, Mtr

	IsError = False

	With xmlRoot.ChildNodes
		Set Mtr = Meter
		Mtr.Open MSG_BOX_CAPTION & "...", 0, .Length - 1

		For i = 0 To .Length - 1
			Mtr.Pos = i
			With .Item(i)
				If .nodetype = 1 Then
					Select Case .nodename
						Case "agentparams"
							CheckKindParams "ag", .ChildNodes, IsError
						Case "agentfacts"
							CheckKindFacts "ag", .ChildNodes, IsError
						Case "entparams"
							CheckKindParams "ent", .ChildNodes, IsError
						Case "entfacts"
							CheckKindFacts "ent", .ChildNodes, IsError
						Case "accparams"
							CheckKindParams "acc", .ChildNodes, IsError
						Case "dbfacts"
							CheckKindFacts "db", .ChildNodes, IsError
						Case "dbparams"
							CheckKindParams "db", .ChildNodes, IsError
						Case "formparams"
							CheckKindParams "frm", .ChildNodes, IsError
						Case "docparams"
							CheckKindParams "doc", .ChildNodes, IsError
						Case "transparams"
							CheckKindParams "jrn", .ChildNodes, IsError
						Case "tmlparams"
							CheckKindParams "tml", .ChildNodes, IsError
						Case "bindparams"
							CheckKindParams "bind", .ChildNodes, IsError
						Case "miscparams"
							CheckKindParams "misc", .ChildNodes, IsError
						Case "miscfacts"
							CheckKindParams "misc", .ChildNodes, IsError
					End Select
				End If
			End With

			If IsError Then
				CheckParams = False
				Exit Function
			End If
		Next

		Mtr.Close
	End With

	CheckParams = True
End Function
'---
'
'---
Function getenumvalue(enName)
	Dim aData, SQL

	getenumvalue = "null"

	SQL = "select enn_id from enum_names where enn_name='" & enName & "'"

	If GetRs2(SQL, aData) Then
		getenumvalue = "'" & aData(0, 0) & "'"
	End If

End Function
'---
'
'---
Sub CheckKindFacts(Kind, xmlRoot, ByRef IsError)
	Dim i, Rs, tblName, fctName, fctType, fctKind, fctRef, fctRefID, fctValue, fctValueGUID
	Dim SQL, ErrorMsg, fctOnDate, fctmscno

	For i = 0 To xmlRoot.Length - 1
		With xmlRoot.Item(i)
			If .nodetype = 1 Then
				fctName = .GetAttribute("name")
				fctType = .GetAttribute("type")
				fctKind = checknull(.GetAttribute("nodetype"), "")
				fctRef = checknull(.GetAttribute("refkind"), "null")
				fctMscno = checknull(.GetAttribute("mscno"), "")
	
				If fctRef = "18" Then
					fctRefID = getenumvalue(checknull(.GetAttribute("refid"), ""))
				ElseIf fctRefID = "" Then
					fctRefID = "null"
				End If
	
				fctOnDate = .GetAttribute("ondate")
	
				fctValue = checknull(.GetAttribute("value"), "")
				fctValueGUID = checknull(.GetAttribute("valueguid"), "")
	
				tblName = kind & "_fact_names"
	
				If Kind = "misc" And fctKind = "" Then
					fctKind = GetMscNo(fctMscno)
				End If
	
				SQL = "select fa_id from " & tblName & " where fa_name='" & fctName & "' and fa_type=" & fctType & " and node_type=" & fctKind 
				Set Rs = GetRs(SQL)
	
				If rs.eof Then
					SQL = "insert into " & tblName & " (fa_name, fa_type, node_type, fa_ref, fa_refid) values ("
					SQL = SQL & "'" & fctName & "'," & fctType & "," & fctKind & "," & iif(fctRef="", "null", fctRef) & "," & iif(fctRefID="", "null", fctRefID) & ")"
	
					If ExecQuery(SQL, ErrorMsg) = 0 Then
						If fctValueGUID <> "" And fctRef <> "" Then
							If Kind = "db" Then
								Workarea.facts.refresh
								Workarea.facts(fctOnDate).Item(fctName).Value = GetIDByGUID(CLng(fctRef), fctValueGUID)
							End If
						ElseIf fctValue <> "" Then
							If Kind = "db" Then
								Workarea.facts.refresh
	
								If fctRef = "5" Then
									Workarea.Facts(fctOnDate).Item(fctName).Value = GetMiscValue(fctValue)
								Else
									Workarea.Facts(fctOnDate).Item(fctName).Value = fctValue
								End If
							End If
						End If
					Else
						MsgBox "Ошибка добавления факта:" & fctName & " kind:" & Kind & vbNewLine & ErrorMsg, vbCritical, MSG_BOX_CAPTION
						IsError = True
						Exit Sub
					End If
				End If
			End If
		End With
	Next
End Sub
'---
'
'---
Sub CheckKindParams(Kind, xmlRoot, ByRef IsError)
	Dim i, Rs, tblName, prmName, prmType, prmKind, prmRef, prmRefID, prmValue, prmValueGUID
	Dim SQL, ErrorMsg, prmGuid, prmmscno

	For i = 0 To xmlRoot.Length - 1
		With xmlRoot.Item(i)
			If .nodetype = 1 Then
				prmName = .GetAttribute("name")
				prmType = .GetAttribute("type")
				prmKind = .GetAttribute("nodetype")
				prmRef = checknull(.GetAttribute("refkind"), "null")
				prmmscno = checknull(.GetAttribute("mscno"), "")
				
				If prmRef = "18" Then
					prmRefID = getenumvalue(checknull(.GetAttribute("refid"), ""))
				End If
	
				prmGuid = .GetAttribute("guid")
	
				prmValue = checknull(.GetAttribute("value"), "")
				prmValueGUID = checknull(.GetAttribute("valueguid"), "")
	
				tblName = kind & "_param_names"
				
				If kind = "misc" And prmKind = ""Then 
					prmKind = GetMiscNo(prmmscno)
				End If

				SQL = "select prm_id from " & tblName & " where prm_name='" & prmName & "' and prm_type=" & prmType& " and node_type=" & prmKind 
				Set Rs = GetRs(SQL)
	
				If rs.eof Then
					SQL = "insert into " & tblName & " (prm_name, prm_type, prm_guid, node_type, prm_ref, prm_refid) values ("
					SQL = SQL & "'" & prmName & "'," & prmType & ",'" & prmGuid & "',"& prmKind & "," & iif(prmRef="", "null", prmRef) & "," & iif(prmRefID="", "null", prmRefID) & ")"
	
					If ExecQuery(SQL, ErrorMsg) = 0 Then
						If prmRef <> "" And prmValueGUID <> "" Then
							If Kind = "db" Then
								Workarea.Params.refresh
								Workarea.Params(prmName).Value = GetIDByGUID(CLng(prmRef), prmValueGUID)
							End If
						ElseIf prmValue <> "" Then
							If Kind = "db" Then
								Workarea.Params.refresh
	
								If prmRef = "5" Then
									Workarea.Params.Item(prmName).Value = GetMiscValue(prmValue)
								Else
									Workarea.Params.Item(prmName).Value = prmValue
								End If
							End If
						End If
					Else
						MsgBox "Ошибка добавления параметра:" & prmName & " kind:" & Kind & vbNewLine & ErrorMsg, vbCritical, MSG_BOX_CAPTION
						IsError = True
						Exit Sub
					End If
				End If
			End If
		End With
	Next
End Sub
'---
'
'---
Function GetIDByGUID(kind, GUID)
	Dim SQL, aData

	GetIDByGUID = 0

	Select Case kind
		Case acAccount
			SQL = "select acc_id from accounts where acc_guid like '" & guid & "'"
		Case acMisc
			SQL = "select msc_id from misc where msc_guid like '" & guid & "'"
		Case acCurs
			SQL = "select cur_id from currencies where cur_guid like '" & guid & "'"
		Case acEntity
			SQL = "select ent_id from entities where ent_guid like '" & guid & "'"
		Case acAgent
			SQL = "select ag_id from agents where ag_guid like '" & guid & "'"
		Case acForm
			SQL = "select frm_id from forms where frm_guid like '" & guid & "'"
		Case acFolder
			SQL = "select fld_id from folders where fld_guid like '" & guid & "'"
		Case acTemplate
			SQL = "select tml_id from templates where tml_guid like '" & guid & "'"
		Case acBinder
			SQL = "select bind_id from binders where bind_guid like '" & guid & "'"
		Case 18			' enums
			SQL = "select enn_id from enum_names where enn_name like '" & guid & "'"			
		Case Else
			SQL = ""
	End Select

	If SQL <> "" Then
		If GetRs2(sql, aData) Then
			GetIDByGUID = adata(0, 0)
		End If
	End If
	
End Function
'---
'
'---
Function GetMiscValue(MscName)
	Dim aData, SQL

	GetMiscValue = 0

	If MscName <> "" Then
		SQL = "select top 1 msc_id from misc where msc_type = -1 and msc_name like '" & MscName & "'"

		If GetRs2(SQL, aData) Then		
			GetMiscValue = aData(0, 0)
		End If
	End If

End Function
'---
'
'---
Function GetMiscNo(MscName)
	Dim aData, SQL

	GetMiscNo = 0

	If MscName <> "" Then
		SQL = "select top 1 msc_no from misc where msc_type = -1 and msc_name like '" & MscName & "'"

		If GetRs2(SQL, aData) Then		
			GetMiscNo = aData(0, 0)
		End If
	End If

End Function
'---
'
'---
