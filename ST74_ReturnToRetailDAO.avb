Option Explicit
'#include "HL74_const.avb"

'-----------------
' набор процедур для обеспечения операций возврата товара от покупателя DAO
'	Last updated : 17.05.2007
'-----------------
Function ReturnToRetail(Op, TrNoTo, TrNoFrom, ChargeMode, flWrite, IsViewError, flBalAccount, flAgFrom, BasAccCode, BasAccMode, TrNoRetail)
	Dim Errors, DictSeries, i, CurrPrice
	Dim MC, DocID, OnDate, AgID, AccID, AccIDRetail, agBuyerID
	Dim TrLstTo, TrLstFrom, TrLstRetail, mt

	Set Errors = CreateObject("Scripting.Dictionary")
	Set DictSeries = CreateObject("Scripting.Dictionary")

	Set TrLstFrom = Op.TransList(TrNoFrom)
	Set TrLstTo = Op.TransList(TrNoTo)
	Set TrLstRetail = Op.TransList(TrNoRetail)

	ClearTrans TrLstTo
	ClearTrans TrLstRetail

	MC = WorkArea.MyCompany.ID
	OnDate = Op.Date
	DocID = Op.ID
	AgID = TrLstTo.Item(1).AgFromID
	AccID = TrLstTo.Item(1).AccCrID
	AccIDRetail = TrLstRetail.Item(1).AccDBID
	agBuyerID = TrLstTo.Item(1).AgToID

	If ChargeMode = 3 Then 
		If Not ManualCharge(Op, TrNoTo, TrNoFrom, TrLstRetail, Errors, MC) Then
			ReturnToRetail = False
			Exit Function
		End If
	Else
		Set Mt = Meter
		Mt.Open "Обработка ...", 0, TrLstFrom.Rows

		For i = 1 To TrLstFrom.Rows
			With TrLstFrom.Item(i)
				If .EntId <> 0 Then
					If .Qty > 0 Then

						If flBalAccount Then AccID = .Entity.AccID
						If flAgFrom Then AgID = .AgFromID

						If ChargeMode = 4 Then
'							DoMidPriceChargeRetail .EntID, .Qty, AccID, AgID, OnDate, DocID, TrLstTo, flWrite, Errors, i, MC, TrLstRetail, AccIDRetail
						Else
							CurrPrice = 0
							DoReturnToRetail .EntID, .Qty, CurrPrice, TrLstTo, TrLstRetail, AccID, AgID, agBuyerID, OnDate, DocID, ChargeMode, flWrite, DictSeries, Errors, i, MC, AccIDRetail
							.Price = CurrPrice
						End If
					End If
				End If
			End With

			Mt.Pos = Mt.Pos + 1 		' нарастили индикатор
		Next
	End If

	If Errors.Count <> 0 Then
		If IsViewError Then 
			Set Workarea.Map.Item("ErrorOp") = Op
			ViewError Errors
		End If
		ReturnToRetail = False
	Else
		ReturnToRetail = True
	End If

End Function

'-----------------
'
'-----------------
Sub ClearTrans(Trans)
	Trans.Rows = 1

	With Trans.Item(1)
		.EntId = 0
		.Qty = 0
		.Sum = 0
	End With

End Sub
'---
'
'---
Function GetEntRetailPriceRT(AccID, EntID, AgToID, OnDate, DocID, MC)
	Dim QD, Rs
	Dim Qty, Sum
	Dim Price, PriceKind

	Set QD = WorkArea.DAODataBase.CreateQueryDef("")
	QD.SQL = "Select Qty, Sum from ST7_oddments_of_the_goods where EntID=[Ent_ID] and Qty <> 0 and Sum <> 0"

	QD.Parameters(0).Value = AgToID
	QD.Parameters(1).Value = AccID
	QD.Parameters(2).Value = DocID
	QD.Parameters(3).Value = OnDate
	QD.Parameters(4).Value = ""
	QD.Parameters(5).Value = MC
	QD.Parameters(6).Value = EntID

	Set Rs = QD.OpenRecordSet()

	If Rs.EOF Then
		Price = 0
	Else
		Qty = Rs.Fields(0).Value
		Sum = Rs.Fields(1).Value

		Price = Sum / Qty
	End If

	If Price = 0 Then
		With WorkArea.Agent(AgToID).Params
			If .Exists(prmAgDefPrice) Then
				If .Item(prmAgDefPrice).Value2 <> 0 Then
					Set PriceKind = Workarea.PriceKind(.Item(prmAgDefPrice).Value2)
					Price = PriceKind.GetEntPrice(EntID, OnDate, WorkArea.DefPriceList)
				End If
			End If
		End With
	End If

	GetEntRetailPriceRT = Price
	
End Function
'-----------------
'
'-----------------
Function GetRestEntSeriesSoldRetail(EntID, agStorageID, accStorageID, agBuyerID, accAddID, ChargeMode, DocID, onDate, MC)
	Dim Rs, QD, SQLStr
	Dim RsCount

	SQLStr = 	"PARAMETERS EntID Long; " & _
					"Select ST7_SoldSeriesRetail.SER_ID, ST7_SoldSeriesRetail.SoldQty, ST7_SoldSeriesRetail.SoldSum, ST7_SoldSeriesRetail.ExtSum " & _
					"FROM ST7_SoldSeriesRetail INNER Join SERIES On ST7_SoldSeriesRetail.SER_ID = SERIES.SER_ID " & _
					"WHERE (((ST7_SoldSeriesRetail.J_ENT)=[EntID])) " & _
					"ORDER BY SERIES.SER_DATE1 "

	If ChargeMode = 2 Then SQLStr = SQLStr & "DESC"

	Set QD = Workarea.DAODataBase.CreateQueryDef("")
	QD.SQL = SQLStr
	QD.Parameters(0).Value = EntID
	QD.Parameters(1).Value = accStorageID
	QD.Parameters(2).Value = agStorageID
	QD.Parameters(3).Value = agBuyerID
	QD.Parameters(4).Value = accAddID
	QD.Parameters(5).Value = onDate
	QD.Parameters(6).Value = DocID
	QD.Parameters(7).Value = MC

	Set RS = QD.OpenRecordSet
	
	If Not Rs.eof Then
		Rs.MoveLast
		RsCount = Rs.RecordCount
		Rs.MoveFirst

		GetRestEntSeriesSoldRetail = Rs.GetRows(RsCount)
	Else
		GetRestEntSeriesSoldRetail = Array()
	End If

End Function
'-----------------
'
'-----------------
Sub DoReturnToRetail(EntID, Qty, ByRef CurrPrice, TrLstTo, TrLstRetail, AccID, AgID, agBuyerID, OnDate, DocID, ChargeMode, flWrite, DictSeries, Errors, TrRowNo, MC, AccIDRetail)
	Dim aSeries
	Dim TotalQty
	Dim aOneSeries 
	Dim i, RowSum, RowAddSum

	TotalQty = Qty
	CurrPrice = GetEntRetailPriceRT(AccID, EntID, AgID, OnDate, DocID, MC)

	If CurrPrice = 0 Then
		Errors.Add Errors.Count + 1, Array(acErrorNoQuant, EntID, TotalQty, TrRowNo, AccID, AgID)
		Exit Sub
	End If

	While TotalQty > 0
		aSeries = GetRestEntSeriesSoldRetail(EntID, AgID, AccID, agBuyerID, AccIDRetail, ChargeMode, DocID, onDate, MC)

		If UBound(aSeries) = -1 Then
			' нет серий на остатке
			Errors.Add Errors.Count + 1, Array(acErrorNoSeries, EntID, TotalQty, TrRowNo, AccID, AgID)
			TotalQty = 0
		Else
			For i = 0 To UBound(aSeries, 2)
				If TotalQty = 0 Then Exit For

				If Not DictSeries.Exists(aSeries(0, i)) Then DictSeries.Add aSeries(0, i), Array(aSeries(1, i), aSeries(2, i), aSeries(3, i))
				aOneSeries = DictSeries.Item(aSeries(0, i))

				If aOneSeries(0) > 0 Then

					If TotalQty > aOneSeries(0) Then 
						RowSum = aOneSeries(1)
						AddRowToTransRetail TrLstTo, EntID, AccID, AgID, -aOneSeries(0), aSeries(0, i), -RowSum, True
						AddRowToTransRetail TrLstRetail, EntID, AccIDRetail, AgID, 0, aSeries(0, i), -aOneSeries(2), False
						TotalQty = TotalQty - aOneSeries(0)
						aOneSeries(0) = 0
						aOneSeries(1) = 0
						aOneSeries(2) = 0
					Else
						RowSum = aOneSeries(1) / aOneSeries(0)
						RowAddSum = aOneSeries(2) / aOneSeries(0)
						AddRowToTransRetail TrLstTo, EntID, AccID, AgID, -TotalQty, aSeries(0, i), -RowSum * TotalQty, True
						AddRowToTransRetail TrLstRetail, EntID, AccIDRetail, AgID, 0, aSeries(0, i), -RowAddSum * TotalQty, False
						aOneSeries(0) = aOneSeries(0) - TotalQty
						aOneSeries(1) = aOneSeries(1) - RowSum * TotalQty
						aOneSeries(2) = aOneSeries(2) - RowAddSum * TotalQty
						TotalQty = 0
					End If

					DictSeries.Item(aSeries(0, i)) = aOneSeries
				
				End If
			Next

			If TotalQty <> 0 Then
				Errors.Add Errors.Count + 1, Array(acErrorNoQuant, EntID, TotalQty, TrRowNo, AccID, AgID)
				TotalQty = 0
			End If
		End If
	Wend
End Sub
'-----------------------------------------------
'
'-----------------------------------------------
Sub AddRowToTransRetail(ByRef TrLst, EntID, AccID, AgID, ByRef Qty, SeriesID, RowSum, Mode)
	Dim RowNo

	If TrLst.Item(TrLst.Rows).EntID <> 0 Then
		RowNo = TrLst.Rows + 1
	Else
		RowNo = TrLst.Rows
	End If

	With TrLst.Item(RowNo)
		.EntID = EntID

		If Mode Then
			.Qty = Qty
			.AccCRId = AccID
		Else
			.Qty = 0
		End If

		.Sum = RowSum
		.Price = Abs(.Price)
		.AgFromId = AgID
		.SeriesID = SeriesID
	End With
End Sub
'-----------------
'
'-----------------
Function ManualCharge(Op, TrNoTo, TrNoFrom, TrLstRetail, Errors, MyCoID)
	Dim i, trPrice, AccIDRetail, TrTo
	Dim DictSeries
	Dim RestQty
	Dim OpDate
	Dim OpID
	Dim Dlg

	AccIDRetail = TrLstRetail.Item(1).AccCrID
	Set DictSeries = CreateObject("Scripting.Dictionary")

	For i = 1 To Op.TransList(TrNoFrom).Rows
		With Op.Trans(TrNoFrom, i)
			Set TrTo = Op.Trans(TrNoTo, i)
			TrTo.EntID = .EntID
			TrTo.SeriesID = .SeriesID
			TrTo.Qty = -.Qty
			TrTo.Price = .Params(prmTrPrice).Value2

			If .EntID <> 0 Then
				If .SeriesID = 0 Then
					Errors.Add Errors.Count + 1, Array(acErrorNoSeriesSet, .EntId , Abs(.Qty) - RestQty, i, .AccDbID, .AgFromID) ' ошибка - недостаточно количества				
				Else				
'					TrPrice = GetEntRetailPriceRT(TrTo.AccCrID, .EntID, .AgFromID, Op.Date, Op.ID, MyCoID)
'					If TrPrice = 0 Then TrPrice = .Price
					AddRowToTransRetail TrLstRetail, .EntID, AccIDRetail, .AgToID, 0, .SeriesID, .Qty * TrTo.Price - .Sum, False
				End If
			End If
		End With
	Next

		ManualCharge = True

End Function

'--------------------------
'	
'--------------------------
Function GetRestQtySeries(EntID, SeriesID, AccID, AgToID, AgFromID, OpDate, OpID, MyCoID)
	Dim RS
	
	With WorkArea.DAODataBase.QueryDefs("ST7_entity_series_from_supplier")
		.Parameters(0).Value = AgToID
		.Parameters(1).Value = AccID
		.Parameters(2).Value = OpID
		.Parameters(3).Value = OpDate
		.Parameters(4).Value = AgFromID
		.Parameters(5).Value = EntID
		.Parameters(6).Value = SeriesID
		.Parameters(7).Value = MyCoID

		Set Rs = .OpenRecordSet

		If Not Rs.EOF Then
			GetRestQtySeries = Rs.Fields(0).Value
		Else
			GetRestQtySeries = 0
		End If
	
	End With

End Function
